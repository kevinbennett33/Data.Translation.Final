---
title: "Data Translation Project"
format: html
editor: visual
---

# a. Load Necessary Packages

```{r}
# Load Necessary Packages
library(lubridate)
library(stringr)
library(tidyverse)
library(vtable)
library(fixest)
library(readr)
library(dplyr)
library(rio)
library(ipumsr)
```

# b. Load, Clean, and Mutate Data for Analysis

```{r}
# Set wd to relevant folder.
setwd("/Users/kevinbennett/Documents/Documents/GitHub/Data.Transation.2")
```

```{r}
# Load Data
ddi <- read_ipums_ddi("cps_00002.xml")
Translation.data <- read_ipums_micro(ddi)

# Show only rows from 2015 and beyond 
Translation.data$YEAR <- as.numeric(Translation.data$YEAR)

Translation.data <- Translation.data[Translation.data$YEAR >= 2015, ]

# Filter out ASECFLAG data, so that data is cleaner. 
Translation.data <- Translation.data %>% filter(is.na(ASECFLAG))

# Filter data so that only rows where EMPSTAT is equal to 10 (employed) or 21 (unemployed) are included. 
Translation.data <- Translation.data %>% filter(EMPSTAT %in% c(10, 21))
```

```{r}
# Join indnames.csv and the Translation.data df
# Read in indnames.csv
indnames <- import('indnames.csv')

# Rename the IND column in Translation.data to ind so that we can join them, using names()[].
names(Translation.data)[20] <- "ind"

# Join Translation.data with indnames using the 'ind' column.
Translation.data <- 
  inner_join(Translation.data, indnames, by = "ind")
```

```{r}
# Join year and month columns together and format as date.
Translation.data <- Translation.data %>% mutate(Date.year.month = ym(paste0(YEAR, '/',MONTH)))
```

```{r}
# Add a Cutoff Variable at 3.11.20 to indicate the WHO recognition of COVId as a global pandemic. # need to edit. 
Translation.data <- Translation.data %>% mutate(covid.pre.post = case_when(
  Date.year.month <= ym('2020/03') ~ "Before",
  Date.year.month > ym('2020/03') ~ "After"
))
```

```{r}
# Create a variable that is centered around Date.year.month == "2020 03)
Translation.data <- Translation.data %>%
  mutate(Center.Date = Date.year.month - as.Date("2020-03-01"))
```

```{r}
# Create character variable for employment. Employed = EMPSTAT == 10 | Unemployed = EMPSTAT == 21
Translation.data <- Translation.data %>% mutate(Employment.Status = case_when(
  EMPSTAT == 10 ~ "EMPLOYED",
  EMPSTAT == 21 ~ "UNEMPLOYED"
))

# Create binary variable for employment. Employed = EMPSTAT == 10 | Unemployed = EMPSTAT == 21
Translation.data <- Translation.data %>% mutate(Employment.Status.numeric = case_when(
  EMPSTAT == 10 ~ 1,
  EMPSTAT == 21 ~ 0
))
```

# 1) How has COVID affected the health of the retail Industry, as measured by employment?

```{r}
# Create a character variable for retail trade employee. Retail Employee = indname == 'Retail Trade' 
Translation.data <- Translation.data %>% mutate(Retail.Trade.Employee = case_when(
  indname == 'Retail Trade' ~ "TRUE",
  TRUE ~ "FALSE"
))

# Create new data frame with only individuals employed in retail
Retail.data <- Translation.data %>% 
  filter(Retail.Trade.Employee == "TRUE")
```

```{r}
# Visual for number of retail employees per month.
# Create data set that contains only Retail data: in "Retail Trade" and EMPSTAT == 10 and 21
Retail.df <- Translation.data %>% filter(indname == "Retail Trade" & EMPSTAT %in% c(10, 21))

# Create a new column that contains a varible that counts the number of retail employees, per month. 
Retail.df <- Retail.df %>% group_by(Date.year.month) %>%
  mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10),
         count.EMPSTAT.21 = sum(EMPSTAT == 21),
         )

# Clean so that there is only one observation per month.
Retail.df <- Retail.df %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Graph data
Retail.visual <- ggplot(Retail.df, aes(x = Date.year.month, y = count.EMPSTAT.10)) +
  geom_point(color = "blue") +
  geom_line() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Employment in Retail Trade from 2019-2022, Monthly', x = 'Date', y = 'Count of Retail Trade Employees')
```

```{r}
Retail.visual
```

```{r}
# Q1 Regression Model

# This model regresses Employment Status on the covid cutoff interacted with an indicator variable that takes a value of 1 if indname = Retail Trade, and 0 if not, and an interaction with the running variable, time, which has been centered around the cutoff date (2020/03).

# The model describes the relationship between the dependent variable, "Employment.Status.numeric," and the independent variables, "covid.pre.post" and "Center.Date," specifically for the subset of data where the industry is categorized as 'Retail Trade'.

#The model measures the change in retail employment status within the 'Retail Trade' industry, specifically examining how it is influenced by the shift from pre-COVID to post-COVID periods and the effect of the specified cutoff date or event.
```

```{r}
# Ensure that covid.pre.post is set to reference (drop) 'Before' 
Translation.data <- Translation.data %>%
  mutate(covid.pre.post = factor(covid.pre.post, levels = c('Before','After')))
```

```{r}
# Retail Regression : Method 1
Q1.Retail.reg <- Translation.data %>%
feols(Employment.Status.numeric ~ covid.pre.post*I(indname == 'Retail Trade')*Center.Date, weights = Translation.data$WTFINL, vcov = ~ indname)
```

```{r}
etable(Q1.Retail.reg, keep = 'covid.pre.post')
```

```{r}
# (covid.pre.post)*RETAILTRUE is the RDD effect of covid.pre.post on the Retail industry.
```

# 2) How has retail fared relative to other industries? (as measured by employment)

```{r}
# Visual for number of employees per month, by industry. 
# data set containing EMPSTAT == c(10,21) for all categories
Industry.data.visual <- Translation.data %>% filter(EMPSTAT %in% c(10, 21))

Industry.data.visual <- Industry.data.visual %>% group_by(Date.year.month, indname) %>%
  mutate(count.EMPSTAT.10 = sum(EMPSTAT == 10),
         count.EMPSTAT.21 = sum(EMPSTAT == 21),
         )

Industry.data.visual <- Industry.data.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Graph data
Plot.Industry <- ggplot(Industry.data.visual, aes(x = Date.year.month, y = count.EMPSTAT.10, color = indname)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Employment from 2019-2022', x = 'Date', y = 'Count of Employees')
```

```{r}
Plot.Industry
```

```{r}
# Individual Comparison: Coefficients on the (covid.pre.post*indname) represent the change in employment share, by industry, relative to the change in retail employment share. 

  # Modify code so that retail will be dropped as the reference group for Q2.reg2.
indlevels = unique(Translation.data$indname)
indlevels = c('Retail Trade', indlevels[indlevels != 'Retail Trade'])
Translation.data <- Translation.data %>%
  mutate(indname = factor(indname, levels = indlevels)) %>%
  mutate(covid.pre.post = factor(covid.pre.post, levels = c('Before','After')))
```

```{r}
# Individual Regression
Q2.reg <- Translation.data %>% 
feols(Employment.Status.numeric ~ indname*Center.Date*covid.pre.post, weights = Translation.data$WTFINL, vcov = ~indname)
```

```{r}
etable(Q2.reg, keep = 'covid.pre.post')
```

# 3) What has changed about *who* is working and earning money? (as measured by employment)

```{r}
# Define Demogrpahics & mutate data for graphs and regression.

# Age
Translation.data <- Translation.data %>% mutate(Generation = case_when(
  AGE >= 77 ~ "BB+",
  AGE >= 52 ~ "BB",
  AGE >= 27 ~ "GEN X",
  AGE >= 15 ~ "GEN Z"
))

# Sex
Translation.data <- Translation.data %>% mutate(Sex = case_when(
 SEX == 1 ~ "MALE",
 SEX == 2  ~ "FEMALE"
))

# Race
Translation.data <- Translation.data %>% mutate(Race = case_when(
  RACE == 100 ~ "WHITE",
  RACE == 200 ~ "BLACK",
  RACE == 300 ~ "NATIVE",
  RACE <= 652 ~ "ASIAN.ISLANDER",
  RACE == 700 ~ "OTHER.SINGLE.RACE",
  RACE >= 801 ~ "OTHER.TWO.MORE.RACE"
))

# Marital Status
Translation.data <- Translation.data %>% mutate(Marital.Status = case_when(
  MARST == 1 ~ "MARRIED",
  MARST == 2 ~ "MARRIED.ALONE",
  MARST == 3 ~ "SEPARATED",
  MARST == 4 ~ "DIVORCED",
  MARST == 5 ~ "WIDOW",
  MARST == 6 ~ "ALWAYS.SINGLE",
  MARST == 7 ~ "WIDOWED.DIVORCED",
  MARST == 9 ~ "NIU"
))
```

```{r}
# Create df for number of people employed in each demographic, per month, to be used for visualization (ggplot).

# Age visual
Age.visual <- Translation.data %>% select(Generation,Date.year.month,covid.pre.post,Center.Date,Employment.Status.numeric)
  
Age.visual <- Age.visual %>%
  group_by(Date.year.month, Generation) %>%
  mutate(count.Employed = sum(Employment.Status.numeric == 1),
         count.Unemployed = sum(Employment.Status.numeric == 0),
         )

Age.visual <- Age.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Sex Visual
Sex.visual <- Translation.data %>% select(Sex,Date.year.month,covid.pre.post,Center.Date,Employment.Status.numeric)
  
Sex.visual <- Sex.visual %>%
  group_by(Date.year.month, Sex) %>%
  mutate(count.Employed = sum(Employment.Status.numeric == 1),
         count.Unemployed = sum(Employment.Status.numeric == 0),
  )

Sex.visual <- Sex.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Race Visual
Race.visual <- Translation.data %>% select(Race,Date.year.month,covid.pre.post,Center.Date,Employment.Status.numeric)
  
Race.visual <- Race.visual %>%
  group_by(Date.year.month, Race) %>%
  mutate(count.Employed = sum(Employment.Status.numeric == 1),
         count.Unemployed = sum(Employment.Status.numeric == 0),
  )

Race.visual <- Race.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)

# Marital Status Visual
Marital.visual <- Translation.data %>% select(Marital.Status,Date.year.month,covid.pre.post,Center.Date,Employment.Status.numeric)
  
Marital.visual <- Marital.visual %>%
  group_by(Date.year.month, Marital.Status) %>%
  mutate(count.Employed = sum(Employment.Status.numeric == 1),
         count.Unemployed = sum(Employment.Status.numeric == 0),
  )

Marital.visual <- Marital.visual %>% distinct(Date.year.month, covid.pre.post, .keep_all = TRUE)
```

```{r}
# Age Graph
Plot.Age <- ggplot(Age.visual, aes(x = Date.year.month, y = count.Employed, color = Generation)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Generational Employment from 2019-2022', x = 'Date', y = 'Count of Employees, Monthly')
```

```{r}
Plot.Age
```

```{r}
# Age (Generation) Regression 
 # Modify code so that BB+ will be dropped as the reference group for the Age Regression.
Generationlevels = unique(Translation.data$Generation)
Generationlevels = c('BB+', Generationlevels[Generationlevels != 'BB+'])

Translation.data <- Translation.data %>%
  mutate(Generation = factor(Generation, levels = Generationlevels)) %>%
  mutate(covid.pre.post = factor(covid.pre.post, levels = c('Before','After')))

Q3.Age.reg <- Translation.data %>% 
feols(Employment.Status.numeric ~ Generation*Center.Date*covid.pre.post, weights = Translation.data$WTFINL, vcov = ~Generation)
```

```{r}
etable(Q3.Age.reg, keep = 'covid.pre.post')
```

```{r}
# Sex Graph
Plot.Sex <- ggplot(Sex.visual, aes(x = Date.year.month, y = count.Employed, color = Sex)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Sex Employment from 2019-2022', x = 'Date', y = 'Count of Employees, Monthly')
```

```{r}
Plot.Sex
```

```{r}
# Sex Regression
Sexlevels = unique(Translation.data$Sex)
Sexlevels = c('MALE', Sexlevels[Sexlevels != 'MALE']) 

Translation.data <- Translation.data %>%
  mutate(Sex = factor(Sex, levels = Sexlevels)) %>%
  mutate(covid.pre.post = factor(covid.pre.post, levels = c('Before', 'After')))

Q3.Sex.reg <- Translation.data %>%
  feols(Employment.Status.numeric ~ Sex * Center.Date * covid.pre.post, weights = Translation.data$WTFINL, vcov = ~Sex)
```

```{r}
etable(Q3.Sex.reg, keep = 'covid.pre.post')
```

```{r}
# Race Graph
Plot.Race <- ggplot(Race.visual, aes(x = Date.year.month, y = count.Employed, color = Race)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Race Employment from 2019-2022', x = 'Date', y = 'Count of Employees, Monthly')
```

```{r}
Plot.Race
```

```{r}
# Race Regression
Racelevels = unique(Translation.data$Race)
Racelevels = c('WHITE', Racelevels[Racelevels != 'WHITE'])

Translation.data <- Translation.data %>%
  mutate(Race = factor(Race, levels = Racelevels)) %>%
  mutate(covid.pre.post = factor(covid.pre.post, levels = c('Before', 'After')))

Q3.Race.reg <- Translation.data %>%
  feols(Employment.Status.numeric ~ Race * Center.Date * covid.pre.post, weights = Translation.data$WTFINL, vcov = ~Race)
```

```{r}
etable(Q3.Race.reg, keep = 'covid.pre.post')
```

```{r}
# Marital Status Graph
Plot.Marital <- ggplot(Marital.visual, aes(x = Date.year.month, y = count.Employed, color = Marital.Status)) +
  geom_point() +
  geom_line() +
  geom_vline(xintercept = ym('2020/03'), color = "orange", linetype = "dashed") +
  theme_minimal() +
  labs(title = 'Marital Employment from 2019-2022', x = 'Date', y = 'Count of Employees, Monthly')
```

```{r}
Plot.Marital
```

```{r}
# Marital Regression
Maritallevels = unique(Translation.data$Marital.Status)
Maritallevels = c('WIDOW', Maritallevels[Maritallevels != 'WIDOW'])

Translation.data <- Translation.data %>%
  mutate(Marital.Status = factor(Marital.Status, levels = Maritallevels)) %>%
  mutate(covid.pre.post = factor(covid.pre.post, levels = c('Before', 'After')))

Q3.Marital.reg <- Translation.data %>%
  feols(Employment.Status.numeric ~ Marital.Status * Center.Date * covid.pre.post, weights = Translation.data$WTFINL, vcov = ~Marital.Status)
```

```{r}
etable(Q3.Marital.reg, keep = 'covid.pre.post')
```
